// source: job.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var query_pb = require('./query_pb.js');
goog.object.extend(proto, query_pb);
goog.exportSymbol('proto.Job', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Job = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Job, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.Job.displayName = 'proto.Job';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.Job.prototype.toObject = function(opt_includeInstance) {
        return proto.Job.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.Job} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.Job.toObject = function(includeInstance, msg) {
        var f,
            obj = {
                id: jspb.Message.getFieldWithDefault(msg, 1, ''),
                query:
                    (f = msg.getQuery()) &&
                    query_pb.Query.toObject(includeInstance, f),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Job}
 */
proto.Job.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.Job();
    return proto.Job.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Job} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Job}
 */
proto.Job.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setId(value);
                break;
            case 2:
                var value = new query_pb.Query();
                reader.readMessage(
                    value,
                    query_pb.Query.deserializeBinaryFromReader,
                );
                msg.setQuery(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Job.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.Job.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Job} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Job.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getQuery();
    if (f != null) {
        writer.writeMessage(2, f, query_pb.Query.serializeBinaryToWriter);
    }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.Job.prototype.getId = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(
        this,
        1,
        '',
    ));
};

/** @param {string} value */
proto.Job.prototype.setId = function(value) {
    jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional Query query = 2;
 * @return {?proto.Query}
 */
proto.Job.prototype.getQuery = function() {
    return /** @type{?proto.Query} */ (jspb.Message.getWrapperField(
        this,
        query_pb.Query,
        2,
    ));
};

/** @param {?proto.Query|undefined} value */
proto.Job.prototype.setQuery = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 */
proto.Job.prototype.clearQuery = function() {
    this.setQuery(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Job.prototype.hasQuery = function() {
    return jspb.Message.getField(this, 2) != null;
};

goog.object.extend(exports, proto);
